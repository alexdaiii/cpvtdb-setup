volumes:
  mutations_data: null

services:

  db:
    image: docker.io/library/postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - 'mutations_data:/var/lib/postgresql/data'
      - ./initdb:/docker-entrypoint-initdb.d/
    # set shared memory limit when using docker-compose
    shm_size: 256mb
    networks:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '512M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 30s
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  client:
    image: docker.io/alexdaiii/channel_mutations_client:0.15.2
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DOMAIN=${DOMAIN}
      - RCSB_SEARCH_AUTHOR=${RCSB_SEARCH_AUTHOR}
      - DEFAULT_PDB=${DEFAULT_PDB}
      - THEMES_COOKIE_SECRET_KEY=${THEMES_COOKIE_SECRET_KEY}
      - COMPANY_NAME=Marks Lab at Columbia University Vagelos College of Physicians and Surgeons
      - OUR_PAPER_PROVENANCE_ID=2
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-8080}:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - database
      - default
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 30s

  cloudflared:
    image: docker.io/cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    depends_on:
      - client
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    volumes:
      - ./tunnel:/etc/cloudflared
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '128M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 30s

networks:
  default:
  database:
